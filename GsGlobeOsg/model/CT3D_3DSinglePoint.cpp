//********************************************************************************** 
//** 文件名称：CT3D_3DSinglePoint.cpp
//** CopyRight (c) 2000-2012 武大吉奥信息技术有限公司开发一部
//** 文件描述： 三维单点类实现
//** 创 建 人： 杨灵
//** 创建日期： 2012-04-14
//********************************************************************************** 
#include "CT3D_3DSinglePoint.h"
#include "CT3D_ShadedVertex3d.h"

#include "CT3D_AABBox.h"
#include "Buffer.h"

//********************************************************************************** 
//** 函数名称： C3DSinglePoint
//** 功能描述： 构造函数
//** 输    入： 无           
//** 输    出： 无
//** 返回值：	无
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
C3DSinglePoint::C3DSinglePoint(void)
{
	m_byTypeID = GEOTYPE_3D_SINGLEPOINT;
	m_dPointSize = 0.0;
}

//********************************************************************************** 
//** 函数名称： ~C3DSinglePoint
//** 功能描述： 析构函数
//** 输    入： 无           
//** 输    出： 无
//** 返回值：	无
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
C3DSinglePoint::~C3DSinglePoint(void)
{

}

//********************************************************************************** 
//** 函数名称： SetVertex
//** 功能描述： 设置点数据
//** 输    入： vPoint	点数据           
//** 输    出： 无
//** 返回值：	无
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//********************************************************************************** 
void C3DSinglePoint::SetVertex(ShadedVertex3d vPoint)
{
    m_vPoint = vPoint;
}

//********************************************************************************** 
//** 函数名称： GetVertex
//** 功能描述： 获得顶点类型编码
//** 输    入： vPoint	点数据           
//** 输    出： 无
//** 返回值：	点数据
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//*********************************************************************************
ShadedVertex3d C3DSinglePoint::GetVertex() const
{
    return m_vPoint;
}

//********************************************************************************** 
//** 函数名称： SetPointSize
//** 功能描述： 设置点大小
//** 输    入： vPoint	点大小           
//** 输    出： 无
//** 返回值：	无
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//********************************************************************************** 
void C3DSinglePoint::SetPointSize(double dPointSize)
{
    m_dPointSize = dPointSize;
}

//********************************************************************************** 
//** 函数名称： GetPointSize
//** 功能描述： 获得点大小
//** 输    入： 无           
//** 输    出： 无
//** 返回值：	点大小
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
double C3DSinglePoint::GetPointSize() const
{
    return m_dPointSize;
}

//********************************************************************************** 
//** 函数名称： CreateObject
//** 功能描述： 开辟一个当前类对象所需的内存空间
//** 输    入： 无           
//** 输    出： 无
//** 返回值：	开辟的当前类对象内存空间的首地址
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
CGeometry* C3DSinglePoint::CreateObject()
{
    return new C3DSinglePoint;
}

//********************************************************************************** 
//** 函数名称： readBuffer
//** 功能描述： 从缓冲区中解析当前对象，并给成员变量赋值
//** 输    入： buf	缓冲区的引用           
//** 输    出： 无
//** 返回值：	成功为true，失败为false
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
bool C3DSinglePoint::readBuffer( Buffer & buf)
{
    bool bRet = C3DGeometry::readBuffer(buf);
	//modify by yangling 20131208 begin
	if(!bRet)
	{
		return false;
	}
	//modify by yangling 20131208 end

    buf.read((char*)&m_vPoint,ShadedVertex3d::sizeBuffer());
	buf.read((char*)&m_dPointSize,sizeof(double));
	return true;
}

//********************************************************************************** 
//** 函数名称： writeBuffer
//** 功能描述： 把当前对象的成员变量数据，打包成一个缓冲区
//** 输    入： buf	缓冲区的引用           
//** 输    出： 无
//** 返回值：	无
//** 作    者： 杨灵
//** 创建日期： 2012-04-16
//**********************************************************************************
void C3DSinglePoint::writeBuffer(Buffer& buf)
{	
    C3DGeometry::writeBuffer(buf);

    buf.write((char*)&m_vPoint,ShadedVertex3d::sizeBuffer());
	buf.write((char*)&m_dPointSize,sizeof(double));
}

size_t C3DSinglePoint::sizeBuffer()
{
	size_t nSize = 0;
	nSize += C3DPoint::sizeBuffer();
	nSize += ShadedVertex3d::sizeBuffer();
	nSize += sizeof(double);
	return nSize;
}
