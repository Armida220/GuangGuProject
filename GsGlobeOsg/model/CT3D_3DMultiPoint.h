//********************************************************************************** 
//** 文件名称：CT3D_3DMultiPoint.h
//** CopyRight (c) 2000-2012 武大吉奥信息技术有限公司开发一部
//** 文件描述： 三维多点类定义
//** 创 建 人： 杨灵
//** 创建日期： 2012-04-13
//********************************************************************************** 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _CT3D_3DMULTIPOINT_H_
#define _CT3D_3DMULTIPOINT_H_

#include "ModelDef.h"
#include "CT3D_3DPoint.h"


class /*DLL_EXPORT*/ C3DMultiPoint :
	public C3DPoint
{

	/** @defgroup C3DPoint C3DMultiPoint-三维多点  
	*  @{
	*/

protected:
	/** @name 属性（成员变量）
	* @{
	*/

	/** 顶点类型编码 */
	byte m_byVertexType;

	/** 顶点序列 */
	void *m_vVertices;

	/** 顶点数 */
	long m_lVertNum;

	
public:

	/** @defgroup C3DMultiPoint 操作（成员函数）
	* @{
	*/

	/** @name 构造与析构函数
	*  @{
	*/

	//********************************************************************************** 
	//** 函数名称： C3DMultiPoint
	//** 功能描述： 构造函数1
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************	
	C3DMultiPoint()
	{
		m_byTypeID = GEOTYPE_3D_MULTIPOINT;

		m_byVertexType = VERTEXTYPE_V3d;
		m_lVertNum = 0;
		m_vVertices = NULL;
	}

	//********************************************************************************** 
	//** 函数名称： C3DMultiPoint
	//** 功能描述： 构造函数2
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	C3DMultiPoint(long lVertNum, void* const vVertices):	
	m_lVertNum(lVertNum), m_vVertices(vVertices)
	{
		m_byTypeID = GEOTYPE_3D_MULTIPOINT;


	}

	//********************************************************************************** 
	//** 函数名称： ~C3DMultiPoint
	//** 功能描述： 析构函数
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	virtual ~C3DMultiPoint(void)
	{
		ReleaseVertexArray(m_byVertexType, m_vVertices);
	}

	/** @} */ // 构造与析构函数结尾


		/** @name 数据操作
	*  @{
	*/

	//********************************************************************************** 
	//** 函数名称： GetVertexType
	//** 功能描述： 获得顶点类型编码
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	顶点类型编码
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	byte GetVertexType() const
	{
		return m_byVertexType;
	}

	//********************************************************************************** 
	//** 函数名称： GetVertices
	//** 功能描述： 获得三维多点顶点数据
	//** 输    入： vVertices 将被赋值的一串三维点对象指针的引用           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	void GetVertices( void*& vVertices ) const
	{
		vVertices = m_vVertices;
	}

	//********************************************************************************** 
	//** 函数名称： GetVertices
	//** 功能描述： 获得三维多点顶点数据
	//** 输    入： vVertices 将被赋值的一串三维点对象指针的引用；vNum 将被赋值的一串三维点对象指针的引用           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	void GetVertices( long& lVertNum, void*& vVertices ) const
	{
		lVertNum = m_lVertNum;
		vVertices = m_vVertices;
	}

	//********************************************************************************** 
	//** 函数名称： GetVerticesEx
	//** 功能描述： 获得三维多点顶点数据
	//** 输    入： 三位顶点基类集合vt3d           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	void GetVerticesEx(vector<Vertex3d>& vt3d) const;

	//********************************************************************************** 
	//** 函数名称： GetVerticesNum
	//** 功能描述： 获得三维多点顶点个数
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	三维多点顶点个数
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	long GetVerticesNum() const
	{
		return m_lVertNum;
	}

	



	/** @name 计算操作
	*  @{
	*/

	//********************************************************************************** 
	//** 函数名称： CreateObject
	//** 功能描述： 开辟一个当前类对象所需的内存空间
	//** 输    入： 无           
	//** 输    出： 无
	//** 返回值：	开辟的当前类对象内存空间的首地址
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	CGeometry* CreateObject();

	//********************************************************************************** 
	//** 函数名称： readBuffer
	//** 功能描述： 从缓冲区中解析当前对象，并给成员变量赋值
	//** 输    入： buf	缓冲区的引用           
	//** 输    出： 无
	//** 返回值：	成功为true，失败为false
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	bool readBuffer( Buffer & buf);

	//********************************************************************************** 
	//** 函数名称： writeBuffer
	//** 功能描述： 把当前对象的成员变量数据，打包成一个缓冲区
	//** 输    入： buf	缓冲区的引用           
	//** 输    出： 无
	//** 返回值：	无
	//** 作    者： 杨灵
	//** 创建日期： 2012-04-16
	//**********************************************************************************
	void writeBuffer(Buffer& buf);
	
	

	virtual size_t sizeBuffer();

};

#endif //_INC_C3DMULTIPOINT_49F16898013X_INCLUDED
